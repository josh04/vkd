
#version 450

// Binding 0 : Position storage buffer
layout(binding = 0, rgba32f) uniform image2D inputTex;
layout(binding = 1, rgba32f) uniform image2D outputTex;

layout (local_size_x_id = 0, local_size_y_id = 1, local_size_z_id = 2) in;

layout (push_constant) uniform PushConstants {
    ivec4 vkd_offset;
    int mode;
} push;

#define MODE_NONE 0
#define MODE_CLOCKWISE90 1
#define MODE_FULL180 2
#define MODE_ANTICLOCKWISE90 3
#define MODE_FLIP_HORIZ 4
#define MODE_FLIP_VERT 5

void main() 
{
    ivec2 coord = ivec2(gl_GlobalInvocationID.xy) + push.vkd_offset.xy;
    
    ivec2 in_dim = imageSize(inputTex);
    ivec2 out_dim = imageSize(outputTex);

    vec4 outp;
    if (push.mode == MODE_NONE) {
        vec4 inp = imageLoad(inputTex, coord);
        outp = inp;
    } else if (push.mode == MODE_CLOCKWISE90) {        
        vec4 inp = imageLoad(inputTex, ivec2(coord.y, coord.x));
        outp = inp;
    } else if (push.mode == MODE_FULL180) {
        vec4 inp = imageLoad(inputTex, ivec2(in_dim.x - coord.x - 1, in_dim.y - coord.y - 1));
        outp = inp;
    } else if (push.mode == MODE_ANTICLOCKWISE90) {
        vec4 inp = imageLoad(inputTex, ivec2(in_dim.y - coord.y - 1, in_dim.x - coord.x - 1));
        outp = inp;
    } else if (push.mode == MODE_FLIP_HORIZ) {
        vec4 inp = imageLoad(inputTex, ivec2(in_dim.x - coord.x - 1, coord.y));
        outp = inp;
    } else if (push.mode == MODE_FLIP_VERT) {
        vec4 inp = imageLoad(inputTex, ivec2(coord.x, in_dim.y - coord.y - 1));
        outp = inp;
    }
    
    imageStore(outputTex, coord, outp);
}
